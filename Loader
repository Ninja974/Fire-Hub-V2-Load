local HttpService = game:GetService("HttpService")
local Analytics = game:GetService("RbxAnalyticsService")

local hwid = Analytics:GetClientId()
local key = "TU-KEY"
local placeid = game.PlaceId
local apiURL = "http://51.75.118.75:20256/validate?key=" .. key .. "&hwid=" .. hwid

local isValid = false
local success, result = pcall(function()
    return game:HttpGet(apiURL)
end)

if success then
    local data = HttpService:JSONDecode(result)
    if data.valid then
        print("✅ Licencia válida.")
        isValid = true
    else
        warn("❌ Acceso denegado: " .. (data.reason or "Desconocido"))
        game:Shutdown()
    end
else
    warn("❌ Error en la validación. Contactá al soporte.")
    game:Shutdown()
end

if isValid then
    local mapScripts = {
        [11468034852] = "Mugen",
        [11468075017] = "Dungeon",
        [13883059853] = "Map 2 Priv",
        [13883279773] = "Map 1 Priv",
        [17387475546] = "Map 1 Public",
        [17387482786] = "Map 2 Public"
    }

    -- Esta lista se reemplaza automáticamente desde el bot según el dropdown
    local allowedMaps = {
        "Map 2 Priv",
        "Map 2 Public"
    }

    local currentMapName = mapScripts[placeid]

    if currentMapName and table.find(allowedMaps, currentMapName) then
        local url = "http://51.75.118.75:20256/script?key=" .. key .. "&hwid=" .. hwid .. "&map=" .. HttpService:UrlEncode(currentMapName)
        local ok, content = pcall(function()
            return game:HttpGet(url, true)
        end)
        if ok then
            loadstring(content)()
        else
            warn("⚠️ Error cargando el script para " .. currentMapName)
        end
    else
        warn("⚠️ No estás autorizado a usar este mapa con tu key.")
        game:Shutdown()
    end
end
